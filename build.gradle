buildscript {
  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    //classpath "gradle.plugin.org.ysb33r.gradle:nodejs-gradle-plugin:0.2"
    //classpath "org.ysb33r.gradle:grolifant:0.3.1"
    classpath files('./gradle/libs/nodejs-gradle-plugin-0.3.jar')
    classpath files('./gradle/libs/grolifant-0.5.1.jar')
    classpath 'gradle.plugin.com.github.honourednihilist:gradle-postgresql-embedded:0.2.0'
  }
}

apply plugin: 'com.github.honourednihilist.gradle-postgresql-embedded'
apply plugin: 'org.ysb33r.nodejs.lerna'

String pg_username = 'postgres'
String pg_password = 'postgres'
String pg_db_name = 'test_db'
int pg_port = 54321

postgresEmbedded {
       version = "V9_6_3"
       host = "localhost"
       port = pg_port
       dbName = pg_db_name
       username = pg_username
       password = pg_password
       artifactStorePath = "./.embedpostgresql" // where PostgreSQL distributions are stored after downloading, inside home directory by default
       stopWhenBuildFinished = true
       timeoutMillisBeforeStop = 0
}

String pg_connection="postgres://${pg_username}:${pg_password}@localhost:${pg_port}/${pg_db_name}"

//////////////////////////////////////
task cleanNodeModules (type: Delete) {
  delete './node_modules'
}

task cleanTestFiles (type: Delete) {
  delete fileTree(dir: '.', include: '*/*/test/TEST-*.xml')
}

task npmBootstrap (type: org.ysb33r.gradle.nodejs.tasks.NpmTask) {
  command 'install'
}

task bootstrap (type: org.ysb33r.gradle.nodejs.tasks.LernaTask,
                dependsOn: [npmBootstrap]) {
  command 'bootstrap'
}

//////////////////////////////////////
task clean (type: org.ysb33r.gradle.nodejs.tasks.LernaTask,
            dependsOn: [cleanTestFiles, cleanNodeModules]) {
  description 'Clean project'
  group 'Build'

  command 'clean'
}

task lint (type: org.ysb33r.gradle.nodejs.tasks.LernaTask,
           dependsOn: [bootstrap]) {
  description 'Lint all the things'
  group 'Build'

  command 'run'
  cmdArgs 'lint', '--concurrency', '1'
}

task test (type: org.ysb33r.gradle.nodejs.tasks.LernaTask,
           dependsOn: [bootstrap, startPostgres, cleanTestFiles]) {
  description 'Runs tests'
  group 'Build'

  command 'run'
  cmdArgs 'test', '--', '--', '--reporter', 'xunit', '--reporter-options', 'output=./test/TEST-result.xml'
  environment PG_CONNECTION_STRING: pg_connection
}
